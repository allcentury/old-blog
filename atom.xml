<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Anthony Ross' Blog]]></title>
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2014-02-18T19:32:09-05:00</updated>
  <id>http://yoursite.com/</id>
  <author>
    <name><![CDATA[Anthony Ross]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Day 2 as a Launcher]]></title>
    <link href="http://yoursite.com/blog/2014/02/18/day-2-as-a-launcher/"/>
    <updated>2014-02-18T18:50:10-05:00</updated>
    <id>http://yoursite.com/blog/2014/02/18/day-2-as-a-launcher</id>
    <content type="html"><![CDATA[<p>These hour long train rides from Launch Academy&rsquo;s &ldquo;Mission Control&rdquo; are nice for a few things &ndash; 1.) I actually get some time to decompress from long hours of staring at manuals and online docs and 2.) I get to actually listen to some music.  Anyone who knows me knows I love music and would be completely content with just closing my eyes and listening for hours.</p>

<p>However, the nicest part about the train (besides the free-wifi &ndash; thanks MBTA) is that I actually get to review the madness that happened during the course of a day.  When you&rsquo;re &ldquo;in&rdquo; the moment, it&rsquo;s hard to step back and reflect on what you just learned.</p>

<p>Today in class we went over flow control in ruby and loops.  These topics aren&rsquo;t foreign to me as I explored them heavily many years ago in C &amp; C++.  The ruby naming conventions and block requirements are a bit different from the languages I already mentioned but I found that interesting.</p>

<p>See in other languages like C, you&rsquo;d have to explicitly define each variable and it&rsquo;s state, but in Ruby you can do this:</p>

<figure class='code'><figcaption><span>Blocks</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">array</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">x</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Where did I define &ldquo;x&rdquo; there?  I didn&rsquo;t.  The each method is so perfect that it doesn&rsquo;t even care that I didn&rsquo;t set the state of &ldquo;x&rdquo;.  While I had been using the each method and a while loop almost interchangeably since the fall, it wasn&rsquo;t until that I realized I can do so much more with less!  In fact, Dan Pickett &ndash; head of LA told us that Ruby&rsquo;s each method is really a fancy while loop but that I should let the language inherently simplify my code.  Brilliant!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Day as a Launcher]]></title>
    <link href="http://yoursite.com/blog/2014/02/18/first-day-as-a-launcher/"/>
    <updated>2014-02-18T08:00:52-05:00</updated>
    <id>http://yoursite.com/blog/2014/02/18/first-day-as-a-launcher</id>
    <content type="html"><![CDATA[<p>Yesterday was my first formal day at Launch Academy.  It was a wild experience, one that seemed a bit surreal.  After having worked at startups for sometime in a fairly non-technical role, it was great to be able to talk to other students about what technology excited them but more importantly what they actually wanted to BUILD with our new set of tools.</p>

<p>Programming up until this point has really seemed like a solo adventure other than the one-off moment where I have to &ldquo;phone a friend&rdquo; because I am hopelessly stuck on something (friends, you know who you are &ndash; thank you!).  Today at Launch Academy though, was different.  Every desk we sit at is a pair-programming station, one that encourages collaboration and communication.  I am excited to continue this journey with and without rubber ducks.</p>

<p>We met the team, all who seem very smart in their own right and eager to help.  Perhaps rather than eager to help, they are eager to challenge you and make you think about problem solving using a new paradigm.  I am under the impression these next 10 weeks will be intense.  We have a tremendous amount of independent learning responsibility outside the classroom but that seems to be where I shine.  I have an understanding of the teaching methods now, one that seems to suit me well an that is challenge-based learning.</p>

<p>Ah challenged-based learning &ndash; give me a problem, a few tools, a few concepts and I&rsquo;m off and running.  Unlike most other RoR guides and tutorials, we&rsquo;re being asked to solve most real world problems which is exactly why I came here.  I regretfully gave up programming at an earlier age because too much of what I was doing was theoretical rather than practical.  This course seems to be a bit of both, but the focus of the curriculum is real world and that excites me.  Looking forward to this week!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My First Post!]]></title>
    <link href="http://yoursite.com/blog/2014/01/14/my-first-post/"/>
    <updated>2014-01-14T00:40:28-05:00</updated>
    <id>http://yoursite.com/blog/2014/01/14/my-first-post</id>
    <content type="html"><![CDATA[<p>Happy January 13th everyone!  I&rsquo;m really excited today as I&rsquo;ve launched this blog using some wonderful Ruby on Rails gems.  Since this is my first post, I think I should explain where I am at today but also where I&rsquo;m coming from.</p>

<p>Learning programming has been an on &amp; off again relationship &ndash; one that started when I was 13 and has continued to rear it&rsquo;s head time and time again.  This time though, as I&rsquo;m anxiously approaching the daunting year that I turn 30 &ndash; I have finally conceded to my own intuition.</p>

<p>See back in High School, I coded and I coded hard.  I had 3 machines running Linux. I wrote a script that made my mom solve complex math problems before she could log onto the machine (she loved this &ndash; I swear.  I called it the &ldquo;logger logger&rdquo;), I had auto-responders on IRC before there was a bot to do that and I eventually made a program that enabled me to write plain text (in English) and it would spit out my Spanish homework.</p>

<p>However, at the age of 18 &ndash; I convinced myself that coding wasn&rsquo;t a &ldquo;creative endeavor&rdquo;.  That it wasn&rsquo;t going to be where I left my mark on the world and that I should try something else.  I went to college, studied business and eventually hung up my programming hat for a while.</p>

<p>After a series of mediocre jobs, none that really intrigued me or asked me to solve any real-world issues, I came back to programming with a new sense of purpose.  I didn&rsquo;t know what that purpose was, I just knew that I was underutilized in my job and therefore wanted to try my hand at developing again.  I&rsquo;m more experienced in life and in business, but more importantly I have a firm understanding of certain areas in the world that have gaps &ndash; some that I think I can help overcome.</p>

<p>In the end, my goal here is a bit selfish, that is to make a better me &ndash; one that involves a life and a career that makes me a forever student.  Iâ€™m the last person to claim to know everything and I think this future career in development fits that mindset, perfectly.</p>
]]></content>
  </entry>
  
</feed>
